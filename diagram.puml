@startuml
set namespaceSeparator ::

class "med_zoom::flutter_flow::flutter_flow_animations.dart::AnimationInfo" {
  +AnimationTrigger trigger
  +List<Effect<dynamic>> effects
  +bool applyInitialState
  +bool loop
  +bool reverse
  +AnimationController controller
}

"med_zoom::flutter_flow::flutter_flow_animations.dart::AnimationInfo" o-- "med_zoom::flutter_flow::flutter_flow_animations.dart::AnimationTrigger"
"med_zoom::flutter_flow::flutter_flow_animations.dart::AnimationInfo" o-- "flutter::src::animation::animation_controller.dart::AnimationController"

class "med_zoom::flutter_flow::flutter_flow_animations.dart::TiltEffect" {
  +Widget build()
}

"flutter_animate::src::effects::effect.dart::Effect" <|-- "med_zoom::flutter_flow::flutter_flow_animations.dart::TiltEffect"

class "med_zoom::flutter_flow::flutter_flow_animations.dart::AnimationTrigger" {
  +int index
  {static} +List<AnimationTrigger> values
  {static} +AnimationTrigger onPageLoad
  {static} +AnimationTrigger onActionTrigger
}

"med_zoom::flutter_flow::flutter_flow_animations.dart::AnimationTrigger" o-- "med_zoom::flutter_flow::flutter_flow_animations.dart::AnimationTrigger"
"dart::core::Enum" <|-- "med_zoom::flutter_flow::flutter_flow_animations.dart::AnimationTrigger"

class "med_zoom::flutter_flow::flutter_flow_calendar.dart::FlutterFlowCalendar" {
  +bool weekFormat
  +bool weekStartsMonday
  +Color color
  +void Function(DateTimeRange?)? onChange
  +DateTime? initialDate
  +Color? iconColor
  +TextStyle? dateStyle
  +TextStyle? dayOfWeekStyle
  +TextStyle? inactiveDateStyle
  +TextStyle? selectedDateStyle
  +TextStyle? titleStyle
  +double? rowHeight
  +String? locale
  +State<StatefulWidget> createState()
}

"med_zoom::flutter_flow::flutter_flow_calendar.dart::FlutterFlowCalendar" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::FlutterFlowCalendar" o-- "null::void Function(DateTimeRange)"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::FlutterFlowCalendar" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::flutter_flow::flutter_flow_calendar.dart::FlutterFlowCalendar"

class "med_zoom::flutter_flow::flutter_flow_calendar.dart::_FlutterFlowCalendarState" {
  +DateTime focusedDay
  +DateTime selectedDay
  +DateTimeRange selectedRange
  +CalendarFormat calendarFormat
  +StartingDayOfWeek startingDayOfWeek
  +Color color
  +Color lightColor
  +Color lighterColor
  +void initState()
  +void setSelectedDay()
  +Widget build()
}

"med_zoom::flutter_flow::flutter_flow_calendar.dart::_FlutterFlowCalendarState" o-- "flutter::src::material::date.dart::DateTimeRange"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::_FlutterFlowCalendarState" o-- "table_calendar::src::shared::utils.dart::CalendarFormat"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::_FlutterFlowCalendarState" o-- "table_calendar::src::shared::utils.dart::StartingDayOfWeek"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::_FlutterFlowCalendarState" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::flutter_flow::flutter_flow_calendar.dart::_FlutterFlowCalendarState"

class "med_zoom::flutter_flow::flutter_flow_calendar.dart::CalendarHeader" {
  +DateTime focusedDay
  +void Function() onLeftChevronTap
  +void Function() onRightChevronTap
  +void Function() onTodayButtonTap
  +Color? iconColor
  +TextStyle? titleStyle
  +String? locale
  +Widget build()
}

"med_zoom::flutter_flow::flutter_flow_calendar.dart::CalendarHeader" o-- "dart::ui::void Function()"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::CalendarHeader" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::CalendarHeader" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "med_zoom::flutter_flow::flutter_flow_calendar.dart::CalendarHeader"

class "med_zoom::flutter_flow::flutter_flow_calendar.dart::CustomIconButton" {
  +Icon icon
  +void Function() onTap
  +EdgeInsetsGeometry margin
  +EdgeInsetsGeometry padding
  +Widget build()
}

"med_zoom::flutter_flow::flutter_flow_calendar.dart::CustomIconButton" o-- "flutter::src::widgets::icon.dart::Icon"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::CustomIconButton" o-- "dart::ui::void Function()"
"med_zoom::flutter_flow::flutter_flow_calendar.dart::CustomIconButton" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "med_zoom::flutter_flow::flutter_flow_calendar.dart::CustomIconButton"

class "med_zoom::flutter_flow::flutter_flow_drop_down.dart::FlutterFlowDropDown" {
  +FormFieldController<T> controller
  +String? hintText
  +String? searchHintText
  +List<T> options
  +List<String>? optionLabels
  +dynamic Function(T?) onChanged
  +Widget? icon
  +double? width
  +double? height
  +Color? fillColor
  +TextStyle? searchHintTextStyle
  +TextStyle textStyle
  +double elevation
  +double borderWidth
  +double borderRadius
  +Color borderColor
  +EdgeInsetsGeometry margin
  +bool hidesUnderline
  +bool disabled
  +bool isSearchable
  +State<FlutterFlowDropDown<T>> createState()
}

"med_zoom::flutter_flow::flutter_flow_drop_down.dart::FlutterFlowDropDown" o-- "med_zoom::flutter_flow::form_field_controller.dart::FormFieldController<T>"
"med_zoom::flutter_flow::flutter_flow_drop_down.dart::FlutterFlowDropDown" o-- "null::dynamic Function(T)"
"med_zoom::flutter_flow::flutter_flow_drop_down.dart::FlutterFlowDropDown" o-- "flutter::src::widgets::framework.dart::Widget"
"med_zoom::flutter_flow::flutter_flow_drop_down.dart::FlutterFlowDropDown" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_drop_down.dart::FlutterFlowDropDown" o-- "flutter::src::painting::text_style.dart::TextStyle"
"med_zoom::flutter_flow::flutter_flow_drop_down.dart::FlutterFlowDropDown" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::flutter_flow::flutter_flow_drop_down.dart::FlutterFlowDropDown"

class "med_zoom::flutter_flow::flutter_flow_drop_down.dart::_FlutterFlowDropDownState" {
  -TextEditingController _textEditingController
  +void Function() listener
  +void initState()
  +void dispose()
  +Widget build()
  -Widget _buildNonSearchableDropdown()
  -Widget _buildSearchableDropdown()
}

"med_zoom::flutter_flow::flutter_flow_drop_down.dart::_FlutterFlowDropDownState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::flutter_flow::flutter_flow_drop_down.dart::_FlutterFlowDropDownState" o-- "null::void Function()"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::flutter_flow::flutter_flow_drop_down.dart::_FlutterFlowDropDownState"

class "med_zoom::flutter_flow::flutter_flow_icon_button.dart::FlutterFlowIconButton" {
  +Widget icon
  +double? borderRadius
  +double? buttonSize
  +Color? fillColor
  +Color? disabledColor
  +Color? disabledIconColor
  +Color? hoverColor
  +Color? hoverIconColor
  +Color? borderColor
  +double? borderWidth
  +bool showLoadingIndicator
  +dynamic Function()? onPressed
  +State<FlutterFlowIconButton> createState()
}

"med_zoom::flutter_flow::flutter_flow_icon_button.dart::FlutterFlowIconButton" o-- "flutter::src::widgets::framework.dart::Widget"
"med_zoom::flutter_flow::flutter_flow_icon_button.dart::FlutterFlowIconButton" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_icon_button.dart::FlutterFlowIconButton" o-- "null::dynamic Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::flutter_flow::flutter_flow_icon_button.dart::FlutterFlowIconButton"

class "med_zoom::flutter_flow::flutter_flow_icon_button.dart::_FlutterFlowIconButtonState" {
  +bool loading
  +double? iconSize
  +Color? iconColor
  +Widget effectiveIcon
  +void initState()
  +void didUpdateWidget()
  -void _updateIcon()
  +Widget build()
}

"med_zoom::flutter_flow::flutter_flow_icon_button.dart::_FlutterFlowIconButtonState" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_icon_button.dart::_FlutterFlowIconButtonState" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::flutter_flow::flutter_flow_icon_button.dart::_FlutterFlowIconButtonState"

abstract class "med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" {
  -bool _isInitialized
  +bool disposeOnWidgetDisposal
  +bool updateOnChange
  -void Function() _updateCallback
  +void initState()
  -void _init()
  +void dispose()
  +void maybeDispose()
  +void onUpdate()
  +FlutterFlowModel setOnUpdate()
  +void updatePage()
}

"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" o-- "dart::ui::void Function()"

class "med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowDynamicModels" {
  +T Function() defaultBuilder
  -Map<String, T> _childrenModels
  -Map<String, int> _childrenIndexes
  -Set<String>? _activeKeys
  +T getModel()
  +List<S> getValues()
  +S? getValueAtIndex()
  +S? getValueForKey()
  +void dispose()
  -void _updateActiveKeys()
}

"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowDynamicModels" o-- "null::T Function()"

abstract class "med_zoom::flutter_flow::flutter_flow_theme.dart::FlutterFlowTheme" {
  +Color primary
  +Color secondary
  +Color tertiary
  +Color alternate
  +Color primaryText
  +Color secondaryText
  +Color primaryBackground
  +Color secondaryBackground
  +Color accent1
  +Color accent2
  +Color accent3
  +Color accent4
  +Color success
  +Color warning
  +Color error
  +Color info
  +Color lineColor
  {static} +ThemeMode themeMode
  +Color primaryColor
  +Color secondaryColor
  +Color tertiaryColor
  +String title1Family
  +TextStyle title1
  +String title2Family
  +TextStyle title2
  +String title3Family
  +TextStyle title3
  +String subtitle1Family
  +TextStyle subtitle1
  +String subtitle2Family
  +TextStyle subtitle2
  +String bodyText1Family
  +TextStyle bodyText1
  +String bodyText2Family
  +TextStyle bodyText2
  +String displayLargeFamily
  +TextStyle displayLarge
  +String displayMediumFamily
  +TextStyle displayMedium
  +String displaySmallFamily
  +TextStyle displaySmall
  +String headlineLargeFamily
  +TextStyle headlineLarge
  +String headlineMediumFamily
  +TextStyle headlineMedium
  +String headlineSmallFamily
  +TextStyle headlineSmall
  +String titleLargeFamily
  +TextStyle titleLarge
  +String titleMediumFamily
  +TextStyle titleMedium
  +String titleSmallFamily
  +TextStyle titleSmall
  +String labelLargeFamily
  +TextStyle labelLarge
  +String labelMediumFamily
  +TextStyle labelMedium
  +String labelSmallFamily
  +TextStyle labelSmall
  +String bodyLargeFamily
  +TextStyle bodyLarge
  +String bodyMediumFamily
  +TextStyle bodyMedium
  +String bodySmallFamily
  +TextStyle bodySmall
  +Typography typography
  {static} +Future<dynamic> initialize()
  {static} +void saveThemeMode()
  {static} +FlutterFlowTheme of()
}

"med_zoom::flutter_flow::flutter_flow_theme.dart::FlutterFlowTheme" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_theme.dart::FlutterFlowTheme" o-- "flutter::src::material::app.dart::ThemeMode"
"med_zoom::flutter_flow::flutter_flow_theme.dart::FlutterFlowTheme" o-- "flutter::src::painting::text_style.dart::TextStyle"
"med_zoom::flutter_flow::flutter_flow_theme.dart::FlutterFlowTheme" o-- "med_zoom::flutter_flow::flutter_flow_theme.dart::Typography"

class "med_zoom::flutter_flow::flutter_flow_theme.dart::LightModeTheme" {
  +Color primary
  +Color secondary
  +Color tertiary
  +Color alternate
  +Color primaryText
  +Color secondaryText
  +Color primaryBackground
  +Color secondaryBackground
  +Color accent1
  +Color accent2
  +Color accent3
  +Color accent4
  +Color success
  +Color warning
  +Color error
  +Color info
  +Color lineColor
  +Color primaryColor
  +Color secondaryColor
  +Color tertiaryColor
}

"med_zoom::flutter_flow::flutter_flow_theme.dart::LightModeTheme" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_theme.dart::FlutterFlowTheme" <|-- "med_zoom::flutter_flow::flutter_flow_theme.dart::LightModeTheme"

abstract class "med_zoom::flutter_flow::flutter_flow_theme.dart::Typography" {
  +String displayLargeFamily
  +TextStyle displayLarge
  +String displayMediumFamily
  +TextStyle displayMedium
  +String displaySmallFamily
  +TextStyle displaySmall
  +String headlineLargeFamily
  +TextStyle headlineLarge
  +String headlineMediumFamily
  +TextStyle headlineMedium
  +String headlineSmallFamily
  +TextStyle headlineSmall
  +String titleLargeFamily
  +TextStyle titleLarge
  +String titleMediumFamily
  +TextStyle titleMedium
  +String titleSmallFamily
  +TextStyle titleSmall
  +String labelLargeFamily
  +TextStyle labelLarge
  +String labelMediumFamily
  +TextStyle labelMedium
  +String labelSmallFamily
  +TextStyle labelSmall
  +String bodyLargeFamily
  +TextStyle bodyLarge
  +String bodyMediumFamily
  +TextStyle bodyMedium
  +String bodySmallFamily
  +TextStyle bodySmall
}

"med_zoom::flutter_flow::flutter_flow_theme.dart::Typography" o-- "flutter::src::painting::text_style.dart::TextStyle"

class "med_zoom::flutter_flow::flutter_flow_theme.dart::ThemeTypography" {
  +FlutterFlowTheme theme
  +String displayLargeFamily
  +TextStyle displayLarge
  +String displayMediumFamily
  +TextStyle displayMedium
  +String displaySmallFamily
  +TextStyle displaySmall
  +String headlineLargeFamily
  +TextStyle headlineLarge
  +String headlineMediumFamily
  +TextStyle headlineMedium
  +String headlineSmallFamily
  +TextStyle headlineSmall
  +String titleLargeFamily
  +TextStyle titleLarge
  +String titleMediumFamily
  +TextStyle titleMedium
  +String titleSmallFamily
  +TextStyle titleSmall
  +String labelLargeFamily
  +TextStyle labelLarge
  +String labelMediumFamily
  +TextStyle labelMedium
  +String labelSmallFamily
  +TextStyle labelSmall
  +String bodyLargeFamily
  +TextStyle bodyLarge
  +String bodyMediumFamily
  +TextStyle bodyMedium
  +String bodySmallFamily
  +TextStyle bodySmall
}

"med_zoom::flutter_flow::flutter_flow_theme.dart::ThemeTypography" o-- "med_zoom::flutter_flow::flutter_flow_theme.dart::FlutterFlowTheme"
"med_zoom::flutter_flow::flutter_flow_theme.dart::ThemeTypography" o-- "flutter::src::painting::text_style.dart::TextStyle"
"med_zoom::flutter_flow::flutter_flow_theme.dart::Typography" <|-- "med_zoom::flutter_flow::flutter_flow_theme.dart::ThemeTypography"

class "med_zoom::flutter_flow::flutter_flow_theme.dart::DarkModeTheme" {
  +Color primary
  +Color secondary
  +Color tertiary
  +Color alternate
  +Color primaryText
  +Color secondaryText
  +Color primaryBackground
  +Color secondaryBackground
  +Color accent1
  +Color accent2
  +Color accent3
  +Color accent4
  +Color success
  +Color warning
  +Color error
  +Color info
  +Color lineColor
  +Color primaryColor
  +Color secondaryColor
  +Color tertiaryColor
}

"med_zoom::flutter_flow::flutter_flow_theme.dart::DarkModeTheme" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_theme.dart::FlutterFlowTheme" <|-- "med_zoom::flutter_flow::flutter_flow_theme.dart::DarkModeTheme"

class "med_zoom::flutter_flow::flutter_flow_util.dart::FormatType" {
  +int index
  {static} +List<FormatType> values
  {static} +FormatType decimal
  {static} +FormatType percent
  {static} +FormatType scientific
  {static} +FormatType compact
  {static} +FormatType compactLong
  {static} +FormatType custom
}

"med_zoom::flutter_flow::flutter_flow_util.dart::FormatType" o-- "med_zoom::flutter_flow::flutter_flow_util.dart::FormatType"
"dart::core::Enum" <|-- "med_zoom::flutter_flow::flutter_flow_util.dart::FormatType"

class "med_zoom::flutter_flow::flutter_flow_util.dart::DecimalType" {
  +int index
  {static} +List<DecimalType> values
  {static} +DecimalType automatic
  {static} +DecimalType periodDecimal
  {static} +DecimalType commaDecimal
}

"med_zoom::flutter_flow::flutter_flow_util.dart::DecimalType" o-- "med_zoom::flutter_flow::flutter_flow_util.dart::DecimalType"
"dart::core::Enum" <|-- "med_zoom::flutter_flow::flutter_flow_util.dart::DecimalType"

class "med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonOptions" {
  +TextStyle? textStyle
  +double? elevation
  +double? height
  +double? width
  +EdgeInsetsGeometry? padding
  +Color? color
  +Color? disabledColor
  +Color? disabledTextColor
  +Color? splashColor
  +double? iconSize
  +Color? iconColor
  +EdgeInsetsGeometry? iconPadding
  +BorderRadius? borderRadius
  +BorderSide? borderSide
  +Color? hoverColor
  +BorderSide? hoverBorderSide
  +Color? hoverTextColor
  +double? hoverElevation
}

"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonOptions" o-- "flutter::src::painting::text_style.dart::TextStyle"
"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonOptions" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonOptions" o-- "dart::ui::Color"
"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonOptions" o-- "flutter::src::painting::border_radius.dart::BorderRadius"
"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonOptions" o-- "flutter::src::painting::borders.dart::BorderSide"

class "med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonWidget" {
  +String text
  +Widget? icon
  +IconData? iconData
  +dynamic Function()? onPressed
  +FFButtonOptions options
  +bool showLoadingIndicator
  +State<FFButtonWidget> createState()
}

"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonWidget" o-- "flutter::src::widgets::icon_data.dart::IconData"
"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonWidget" o-- "null::dynamic Function()"
"med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonWidget" o-- "med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonOptions"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::flutter_flow::flutter_flow_widgets.dart::FFButtonWidget"

class "med_zoom::flutter_flow::flutter_flow_widgets.dart::_FFButtonWidgetState" {
  +bool loading
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::flutter_flow::flutter_flow_widgets.dart::_FFButtonWidgetState"

class "med_zoom::flutter_flow::form_field_controller.dart::FormFieldController" {
  +T? initialValue
  +void reset()
}

"flutter::src::foundation::change_notifier.dart::ValueNotifier" <|-- "med_zoom::flutter_flow::form_field_controller.dart::FormFieldController"

class "med_zoom::flutter_flow::internationalization.dart::FFLocalizations" {
  +Locale locale
  {static} -SharedPreferences _prefs
  {static} -Set<String> _languagesWithShortCode
  +String languageCode
  +String? languageShortCode
  +int languageIndex
  {static} +FFLocalizations of()
  {static} +List<String> languages()
  {static} +Future<dynamic> initialize()
  {static} +Future<dynamic> storeLocale()
  {static} +Locale? getStoredLocale()
  +String getText()
  +String getVariableText()
}

"med_zoom::flutter_flow::internationalization.dart::FFLocalizations" o-- "dart::ui::Locale"
"med_zoom::flutter_flow::internationalization.dart::FFLocalizations" o-- "shared_preferences::shared_preferences.dart::SharedPreferences"

class "med_zoom::flutter_flow::internationalization.dart::FFLocalizationsDelegate" {
  +bool isSupported()
  +Future<FFLocalizations> load()
  +bool shouldReload()
}

"flutter::src::widgets::localizations.dart::LocalizationsDelegate" <|-- "med_zoom::flutter_flow::internationalization.dart::FFLocalizationsDelegate"

class "med_zoom::flutter_flow::lat_lng.dart::LatLng" {
  +double latitude
  +double longitude
  +int hashCode
  +String toString()
  +String serialize()
  +bool ==()
}

class "med_zoom::flutter_flow::nav::nav.dart::AppStateNotifier" {
  {static} -AppStateNotifier? _instance
  +bool showSplashImage
  {static} +AppStateNotifier instance
  +void stopShowingSplashImage()
}

"med_zoom::flutter_flow::nav::nav.dart::AppStateNotifier" o-- "med_zoom::flutter_flow::nav::nav.dart::AppStateNotifier"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "med_zoom::flutter_flow::nav::nav.dart::AppStateNotifier"

class "med_zoom::flutter_flow::nav::nav.dart::FFParameters" {
  +GoRouterState state
  +Map<String, Future<dynamic> Function(String)> asyncParams
  +Map<String, dynamic> futureParamValues
  +bool isEmpty
  +bool hasFutures
  +bool isAsyncParam()
  +Future<bool> completeFutures()
  +dynamic getParam()
}

"med_zoom::flutter_flow::nav::nav.dart::FFParameters" o-- "go_router::src::state.dart::GoRouterState"

class "med_zoom::flutter_flow::nav::nav.dart::FFRoute" {
  +String name
  +String path
  +bool requireAuth
  +Map<String, Future<dynamic> Function(String)> asyncParams
  +Widget Function(BuildContext, FFParameters) builder
  +List<GoRoute> routes
  +GoRoute toRoute()
}

"med_zoom::flutter_flow::nav::nav.dart::FFRoute" o-- "null::Widget Function(BuildContext, FFParameters)"

class "med_zoom::flutter_flow::nav::nav.dart::TransitionInfo" {
  +bool hasTransition
  +PageTransitionType transitionType
  +Duration duration
  +Alignment? alignment
  {static} +TransitionInfo appDefault()
}

"med_zoom::flutter_flow::nav::nav.dart::TransitionInfo" o-- "page_transition::src::enum.dart::PageTransitionType"
"med_zoom::flutter_flow::nav::nav.dart::TransitionInfo" o-- "flutter::src::painting::alignment.dart::Alignment"

class "med_zoom::flutter_flow::nav::serialization_util.dart::ParamType" {
  +int index
  {static} +List<ParamType> values
  {static} +ParamType int
  {static} +ParamType double
  {static} +ParamType String
  {static} +ParamType bool
  {static} +ParamType DateTime
  {static} +ParamType DateTimeRange
  {static} +ParamType LatLng
  {static} +ParamType Color
  {static} +ParamType FFPlace
  {static} +ParamType FFUploadedFile
  {static} +ParamType JSON
}

"med_zoom::flutter_flow::nav::serialization_util.dart::ParamType" o-- "med_zoom::flutter_flow::nav::serialization_util.dart::ParamType"
"dart::core::Enum" <|-- "med_zoom::flutter_flow::nav::serialization_util.dart::ParamType"

class "med_zoom::flutter_flow::place.dart::FFPlace" {
  +LatLng latLng
  +String name
  +String address
  +String city
  +String state
  +String country
  +String zipCode
  +int hashCode
  +String toString()
  +bool ==()
}

"med_zoom::flutter_flow::place.dart::FFPlace" o-- "med_zoom::flutter_flow::lat_lng.dart::LatLng"

class "med_zoom::flutter_flow::uploaded_file.dart::FFUploadedFile" {
  +String? name
  +Uint8List? bytes
  +double? height
  +double? width
  +String? blurHash
  +int hashCode
  +String toString()
  +String serialize()
  {static} +FFUploadedFile deserialize()
  +bool ==()
}

"med_zoom::flutter_flow::uploaded_file.dart::FFUploadedFile" o-- "dart::typed_data::Uint8List"

class "med_zoom::main.dart::MyApp" {
  +State<MyApp> createState()
  {static} +_MyAppState of()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::main.dart::MyApp"

class "med_zoom::main.dart::_MyAppState" {
  -Locale? _locale
  -ThemeMode _themeMode
  -AppStateNotifier _appStateNotifier
  -GoRouter _router
  +bool displaySplashImage
  +void initState()
  +void setLocale()
  +void setThemeMode()
  +Widget build()
}

"med_zoom::main.dart::_MyAppState" o-- "dart::ui::Locale"
"med_zoom::main.dart::_MyAppState" o-- "flutter::src::material::app.dart::ThemeMode"
"med_zoom::main.dart::_MyAppState" o-- "med_zoom::flutter_flow::nav::nav.dart::AppStateNotifier"
"med_zoom::main.dart::_MyAppState" o-- "go_router::src::router.dart::GoRouter"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::main.dart::_MyAppState"

class "med_zoom::pages::dashboard::dashboard_model.dart::DashboardModel" {
  +void initState()
  +void dispose()
}

"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::dashboard::dashboard_model.dart::DashboardModel"

class "med_zoom::pages::dashboard::dashboard_widget.dart::DashboardWidget" {
  +_DashboardWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::dashboard::dashboard_widget.dart::DashboardWidget"

class "med_zoom::pages::dashboard::dashboard_widget.dart::_DashboardWidgetState" {
  -DashboardModel _model
  +GlobalKey<ScaffoldState> scaffoldKey
  +Map<String, AnimationInfo> animationsMap
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::dashboard::dashboard_widget.dart::_DashboardWidgetState" o-- "med_zoom::pages::dashboard::dashboard_model.dart::DashboardModel"
"med_zoom::pages::dashboard::dashboard_widget.dart::_DashboardWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::dashboard::dashboard_widget.dart::_DashboardWidgetState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "med_zoom::pages::dashboard::dashboard_widget.dart::_DashboardWidgetState"

class "med_zoom::pages::disponieren::disponieren_model.dart::DisponierenModel" {
  +TextEditingController? eingabefeldController1
  +String? Function(BuildContext, String?)? eingabefeldController1Validator
  +TextEditingController? eingabefeldController2
  +String? Function(BuildContext, String?)? eingabefeldController2Validator
  +TextEditingController? eingabefeldController3
  +String? Function(BuildContext, String?)? eingabefeldController3Validator
  +TextEditingController? eingabefeldController4
  +String? Function(BuildContext, String?)? eingabefeldController4Validator
  +void initState()
  +void dispose()
}

"med_zoom::pages::disponieren::disponieren_model.dart::DisponierenModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::disponieren::disponieren_model.dart::DisponierenModel" o-- "null::String Function(BuildContext, String)"
"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::disponieren::disponieren_model.dart::DisponierenModel"

class "med_zoom::pages::disponieren::disponieren_widget.dart::DisponierenWidget" {
  +_DisponierenWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::disponieren::disponieren_widget.dart::DisponierenWidget"

class "med_zoom::pages::disponieren::disponieren_widget.dart::_DisponierenWidgetState" {
  -DisponierenModel _model
  +GlobalKey<ScaffoldState> scaffoldKey
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::disponieren::disponieren_widget.dart::_DisponierenWidgetState" o-- "med_zoom::pages::disponieren::disponieren_model.dart::DisponierenModel"
"med_zoom::pages::disponieren::disponieren_widget.dart::_DisponierenWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::disponieren::disponieren_widget.dart::_DisponierenWidgetState"

class "med_zoom::pages::fahrdienst::fahrdienst_model.dart::FahrdienstModel" {
  +TextEditingController? eingabefeldController1
  +String? Function(BuildContext, String?)? eingabefeldController1Validator
  +TextEditingController? eingabefeldController2
  +String? Function(BuildContext, String?)? eingabefeldController2Validator
  +TextEditingController? eingabefeldController3
  +String? Function(BuildContext, String?)? eingabefeldController3Validator
  +TextEditingController? eingabefeldController4
  +String? Function(BuildContext, String?)? eingabefeldController4Validator
  +TextEditingController? eingabefeldController5
  +String? Function(BuildContext, String?)? eingabefeldController5Validator
  +TextEditingController? eingabefeldController6
  +String? Function(BuildContext, String?)? eingabefeldController6Validator
  +TextEditingController? eingabefeldController7
  +String? Function(BuildContext, String?)? eingabefeldController7Validator
  +TextEditingController? eingabefeldController8
  +String? Function(BuildContext, String?)? eingabefeldController8Validator
  +void initState()
  +void dispose()
}

"med_zoom::pages::fahrdienst::fahrdienst_model.dart::FahrdienstModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::fahrdienst::fahrdienst_model.dart::FahrdienstModel" o-- "null::String Function(BuildContext, String)"
"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::fahrdienst::fahrdienst_model.dart::FahrdienstModel"

class "med_zoom::pages::fahrdienst::fahrdienst_widget.dart::FahrdienstWidget" {
  +_FahrdienstWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::fahrdienst::fahrdienst_widget.dart::FahrdienstWidget"

class "med_zoom::pages::fahrdienst::fahrdienst_widget.dart::_FahrdienstWidgetState" {
  -FahrdienstModel _model
  +GlobalKey<ScaffoldState> scaffoldKey
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::fahrdienst::fahrdienst_widget.dart::_FahrdienstWidgetState" o-- "med_zoom::pages::fahrdienst::fahrdienst_model.dart::FahrdienstModel"
"med_zoom::pages::fahrdienst::fahrdienst_widget.dart::_FahrdienstWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::fahrdienst::fahrdienst_widget.dart::_FahrdienstWidgetState"

class "med_zoom::pages::login::login_model.dart::LoginModel" {
  +void initState()
  +void dispose()
}

"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::login::login_model.dart::LoginModel"

class "med_zoom::pages::login::login_widget.dart::LoginWidget" {
  +_LoginWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::login::login_widget.dart::LoginWidget"

class "med_zoom::pages::login::login_widget.dart::_LoginWidgetState" {
  -LoginModel _model
  +TextEditingController emailTextField
  +TextEditingController passwordTextField
  -String _ip
  +GlobalKey<ScaffoldState> scaffoldKey
  -FocusNode _unfocusNode
  +void initState()
  +void dispose()
  +Widget build()
  -Future<bool> _loginSecure()
}

"med_zoom::pages::login::login_widget.dart::_LoginWidgetState" o-- "med_zoom::pages::login::login_model.dart::LoginModel"
"med_zoom::pages::login::login_widget.dart::_LoginWidgetState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::login::login_widget.dart::_LoginWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"med_zoom::pages::login::login_widget.dart::_LoginWidgetState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::login::login_widget.dart::_LoginWidgetState"

class "med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_model.dart::NeueFahrtPlanenModel" {
  +TextEditingController? textController1
  +String? Function(BuildContext, String?)? textController1Validator
  +TextEditingController? textController2
  +String? Function(BuildContext, String?)? textController2Validator
  +TextEditingController? textController3
  +String? Function(BuildContext, String?)? textController3Validator
  +DateTimeRange? calendarSelectedDay
  +void initState()
  +void dispose()
}

"med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_model.dart::NeueFahrtPlanenModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_model.dart::NeueFahrtPlanenModel" o-- "null::String Function(BuildContext, String)"
"med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_model.dart::NeueFahrtPlanenModel" o-- "flutter::src::material::date.dart::DateTimeRange"
"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_model.dart::NeueFahrtPlanenModel"

class "med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_widget.dart::NeueFahrtPlanenWidget" {
  +_NeueFahrtPlanenWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_widget.dart::NeueFahrtPlanenWidget"

class "med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_widget.dart::_NeueFahrtPlanenWidgetState" {
  -NeueFahrtPlanenModel _model
  +void setState()
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_widget.dart::_NeueFahrtPlanenWidgetState" o-- "med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_model.dart::NeueFahrtPlanenModel"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::neue_fahrt_planen::neue_fahrt_planen_widget.dart::_NeueFahrtPlanenWidgetState"

class "med_zoom::pages::patient::patient_model.dart::PatientModel" {
  +TextEditingController? eingabefeldController1
  +String? Function(BuildContext, String?)? eingabefeldController1Validator
  +String? dropDownValue
  +FormFieldController<String>? dropDownValueController
  +TextEditingController? eingabefeldController2
  +String? Function(BuildContext, String?)? eingabefeldController2Validator
  +TextEditingController? eingabefeldController3
  +String? Function(BuildContext, String?)? eingabefeldController3Validator
  +TextEditingController? eingabefeldController4
  +String? Function(BuildContext, String?)? eingabefeldController4Validator
  +TextEditingController? eingabefeldController5
  +String? Function(BuildContext, String?)? eingabefeldController5Validator
  +TextEditingController? eingabefeldController6
  +String? Function(BuildContext, String?)? eingabefeldController6Validator
  +String? auswahlfeldValue1
  +FormFieldController<String>? auswahlfeldValueController1
  +String? auswahlfeldValue2
  +FormFieldController<String>? auswahlfeldValueController2
  +TextEditingController? eingabefeldController7
  +String? Function(BuildContext, String?)? eingabefeldController7Validator
  +TextEditingController? eingabefeldController8
  +String? Function(BuildContext, String?)? eingabefeldController8Validator
  +TextEditingController? eingabefeldController9
  +String? Function(BuildContext, String?)? eingabefeldController9Validator
  +void initState()
  +void dispose()
}

"med_zoom::pages::patient::patient_model.dart::PatientModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::patient::patient_model.dart::PatientModel" o-- "null::String Function(BuildContext, String)"
"med_zoom::pages::patient::patient_model.dart::PatientModel" o-- "med_zoom::flutter_flow::form_field_controller.dart::FormFieldController<String>"
"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::patient::patient_model.dart::PatientModel"

class "med_zoom::pages::patient::patient_widget.dart::PatientWidget" {
  +_PatientWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::patient::patient_widget.dart::PatientWidget"

class "med_zoom::pages::patient::patient_widget.dart::_PatientWidgetState" {
  -PatientModel _model
  +GlobalKey<ScaffoldState> scaffoldKey
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::patient::patient_widget.dart::_PatientWidgetState" o-- "med_zoom::pages::patient::patient_model.dart::PatientModel"
"med_zoom::pages::patient::patient_widget.dart::_PatientWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::patient::patient_widget.dart::_PatientWidgetState"

class "med_zoom::pages::patientenliste::patientenliste_model.dart::PatientenlisteModel" {
  +TextEditingController? textController
  +String? Function(BuildContext, String?)? textControllerValidator
  +void initState()
  +void dispose()
}

"med_zoom::pages::patientenliste::patientenliste_model.dart::PatientenlisteModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::patientenliste::patientenliste_model.dart::PatientenlisteModel" o-- "null::String Function(BuildContext, String)"
"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::patientenliste::patientenliste_model.dart::PatientenlisteModel"

class "med_zoom::pages::patientenliste::patientenliste_widget.dart::PatientenlisteWidget" {
  +_PatientenlisteWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::patientenliste::patientenliste_widget.dart::PatientenlisteWidget"

class "med_zoom::pages::patientenliste::patientenliste_widget.dart::_PatientenlisteWidgetState" {
  -PatientenlisteModel _model
  +GlobalKey<ScaffoldState> scaffoldKey
  -FocusNode _unfocusNode
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::patientenliste::patientenliste_widget.dart::_PatientenlisteWidgetState" o-- "med_zoom::pages::patientenliste::patientenliste_model.dart::PatientenlisteModel"
"med_zoom::pages::patientenliste::patientenliste_widget.dart::_PatientenlisteWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"med_zoom::pages::patientenliste::patientenliste_widget.dart::_PatientenlisteWidgetState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::patientenliste::patientenliste_widget.dart::_PatientenlisteWidgetState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "med_zoom::pages::patientenliste::patientenliste_widget.dart::_PatientenlisteWidgetState"

class "med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_model.dart::PUFahrdienstSuchenModel" {
  +TextEditingController? eingabefeldController1
  +String? Function(BuildContext, String?)? eingabefeldController1Validator
  +TextEditingController? eingabefeldController2
  +String? Function(BuildContext, String?)? eingabefeldController2Validator
  +void initState()
  +void dispose()
}

"med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_model.dart::PUFahrdienstSuchenModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_model.dart::PUFahrdienstSuchenModel" o-- "null::String Function(BuildContext, String)"
"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_model.dart::PUFahrdienstSuchenModel"

class "med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_widget.dart::PUFahrdienstSuchenWidget" {
  +_PUFahrdienstSuchenWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_widget.dart::PUFahrdienstSuchenWidget"

class "med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_widget.dart::_PUFahrdienstSuchenWidgetState" {
  -PUFahrdienstSuchenModel _model
  +void setState()
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_widget.dart::_PUFahrdienstSuchenWidgetState" o-- "med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_model.dart::PUFahrdienstSuchenModel"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::p_u_fahrdienst_suchen::p_u_fahrdienst_suchen_widget.dart::_PUFahrdienstSuchenWidgetState"

class "med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_model.dart::PUPatientSuchenModel" {
  +TextEditingController? eingabefeldController1
  +String? Function(BuildContext, String?)? eingabefeldController1Validator
  +TextEditingController? eingabefeldController2
  +String? Function(BuildContext, String?)? eingabefeldController2Validator
  +void initState()
  +void dispose()
}

"med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_model.dart::PUPatientSuchenModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_model.dart::PUPatientSuchenModel" o-- "null::String Function(BuildContext, String)"
"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_model.dart::PUPatientSuchenModel"

class "med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_widget.dart::PUPatientSuchenWidget" {
  +_PUPatientSuchenWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_widget.dart::PUPatientSuchenWidget"

class "med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_widget.dart::_PUPatientSuchenWidgetState" {
  -PUPatientSuchenModel _model
  +void setState()
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_widget.dart::_PUPatientSuchenWidgetState" o-- "med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_model.dart::PUPatientSuchenModel"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::p_u_patient_suchen::p_u_patient_suchen_widget.dart::_PUPatientSuchenWidgetState"

class "med_zoom::pages::termineeuebrsicht::termineeuebrsicht_model.dart::TermineeuebrsichtModel" {
  +TextEditingController? textController
  +String? Function(BuildContext, String?)? textControllerValidator
  +bool? checkboxValue1
  +bool? checkboxValue2
  +bool? checkboxValue3
  +bool? checkboxValue4
  +bool? checkboxValue5
  +bool? checkboxValue6
  +void initState()
  +void dispose()
}

"med_zoom::pages::termineeuebrsicht::termineeuebrsicht_model.dart::TermineeuebrsichtModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"med_zoom::pages::termineeuebrsicht::termineeuebrsicht_model.dart::TermineeuebrsichtModel" o-- "null::String Function(BuildContext, String)"
"med_zoom::flutter_flow::flutter_flow_model.dart::FlutterFlowModel" <|-- "med_zoom::pages::termineeuebrsicht::termineeuebrsicht_model.dart::TermineeuebrsichtModel"

class "med_zoom::pages::termineeuebrsicht::termineeuebrsicht_widget.dart::TermineeuebrsichtWidget" {
  +_TermineeuebrsichtWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "med_zoom::pages::termineeuebrsicht::termineeuebrsicht_widget.dart::TermineeuebrsichtWidget"

class "med_zoom::pages::termineeuebrsicht::termineeuebrsicht_widget.dart::_TermineeuebrsichtWidgetState" {
  -TermineeuebrsichtModel _model
  +GlobalKey<ScaffoldState> scaffoldKey
  -FocusNode _unfocusNode
  +void initState()
  +void dispose()
  +Widget build()
}

"med_zoom::pages::termineeuebrsicht::termineeuebrsicht_widget.dart::_TermineeuebrsichtWidgetState" o-- "med_zoom::pages::termineeuebrsicht::termineeuebrsicht_model.dart::TermineeuebrsichtModel"
"med_zoom::pages::termineeuebrsicht::termineeuebrsicht_widget.dart::_TermineeuebrsichtWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"med_zoom::pages::termineeuebrsicht::termineeuebrsicht_widget.dart::_TermineeuebrsichtWidgetState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "med_zoom::pages::termineeuebrsicht::termineeuebrsicht_widget.dart::_TermineeuebrsichtWidgetState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "med_zoom::pages::termineeuebrsicht::termineeuebrsicht_widget.dart::_TermineeuebrsichtWidgetState"

class "med_zoom::utils::colors.dart::ColorsSelect" {
  {static} +Color appbarTitle
  {static} +Color background
  {static} +Color boxBorder
  {static} +Color buttonABorder
  {static} +Color buttonAFill
  {static} +Color buttonAText
  {static} +Color buttonBBorder
  {static} +Color buttonBFill
  {static} +Color buttonBText
  {static} +Color iconBlack
  {static} +Color iconDisabled
  {static} +Color iconFavorite
  {static} +Color invisible
  {static} +Color sliderThumbActive
  {static} +Color sliderThumbInactive
  {static} +Color sliderTrackActive
  {static} +Color sliderTrackInactive
  {static} +Color medZoomA
  {static} +Color medZoomB
  {static} +Color switchActive
  {static} +Color switchActiveTrack
  {static} +Color switchInactive
  {static} +Color switchInactiveTrack
  {static} +Color switchTileBorder
  {static} +Color switchTileFill
  {static} +Color textBlack
  {static} +Color textFieldEdgeWhite
  {static} +Color textFieldEdgeGray
  {static} +Color textFieldFillTransparent
  {static} +Color textFieldLabel
  {static} +Color textGray
  {static} +Color textTileTitle
  {static} +Color textTitle
  {static} +Color textWhite
  {static} +Color tileColor
  {static} +Color tileDivider
  {static} +Color tileOverlay
}

"med_zoom::utils::colors.dart::ColorsSelect" o-- "dart::ui::Color"

class "med_zoom::utils::temp_data.dart::TempData" {
  {static} -int _mobility
  {static} -String _ipv4
  {static} -String _ip
  {static} +int getMobility()
  {static} +dynamic setMobility()
  {static} +String getIP()
}


@enduml
